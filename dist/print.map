{"version":3,"sources":["webpack://printJS/webpack/universalModuleDefinition","webpack://printJS/webpack/bootstrap","webpack://printJS/./src/js/browser.js","webpack://printJS/./src/js/modal.js","webpack://printJS/./src/js/print.js","webpack://printJS/./src/js/functions.js","webpack://printJS/./src/js/html.js","webpack://printJS/./src/js/file.js","webpack://printJS/./src/js/raw-html.js","webpack://printJS/./src/js/image.js","webpack://printJS/./src/js/json.js","webpack://printJS/./src/js/init.js","webpack://printJS/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Browser","isFirefox","InstallTrigger","isIE","navigator","userAgent","indexOf","document","documentMode","isEdge","StyleMedia","isChrome","context","chrome","isSafari","toString","HTMLElement","toLowerCase","isIOSChrome","Modal","show","params","printModal","createElement","setAttribute","contentDiv","closeButton","appendChild","spinner","messageNode","createTextNode","modalMessage","getElementsByTagName","getElementById","addEventListener","close","printFrame","parentNode","removeChild","performPrint","iframeElement","focus","contentWindow","execCommand","e","print","error","onError","cleanUp","Print","send","frameId","onload","printDocument","contentDocument","type","title","documentTitle","body","printableElement","style","innerHTML","head","images","Array","slice","length","promises","map","image","src","location","href","Promise","resolve","pollImage","naturalWidth","complete","setTimeout","loadIframeImage","all","loadIframeImages","then","collectStyles","element","win","defaultView","elementStyle","styles","getComputedStyle","keys","targetStyles","targetStyle","targetStylesMatch","getPropertyValue","maxWidth","font_size","addHeader","printElement","raw","headerContainer","header","RegExp","test","headerElement","headerNode","headerStyle","insertBefore","childNodes","showModal","onLoadingEnd","onLoadingStart","URL","revokeObjectURL","printable","onPrintDialogClose","event","handler","removeEventListener","createBlobAndPrint","data","mimeType","localFile","Blob","createObjectURL","printFile","url","reject","req","XMLHttpRequest","responseType","status","err","Error","open","loadFile","response","cloneElement","clone","cloneNode","childNodesArray","ignoreElements","id","clonedChild","scanStyles","nodeType","tagName","getContext","drawImage","console","defaultMime","mime","base64","Uint8Array","from","atob","charCodeAt","origin","charAt","constructor","forEach","img","imageStyle","imageWrapper","repeatTableHeader","properties","isArray","field","displayName","columnSize","htmlData","a","gridHeaderStyle","obj","toUpperCase","stringData","split","gridStyle","jsonToHTML","printTypes","printJS","fallbackPrintable","font","honorMarginPadding","honorColor","onPdfOpen","onBrowserIncompatible","css","args","arguments","undefined","encodeURI","k","usedFrame","srcdoc","file","File","info","Image","Html","RawHtml","Json"],"mappings":"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","file":"print.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"printJS\"] = factory();\n\telse\n\t\troot[\"printJS\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const Browser = {\n  // Firefox 1.0+\n  isFirefox: () => {\n    return typeof InstallTrigger !== 'undefined'\n  },\n  // Internet Explorer 6-11\n  isIE: () => {\n    return navigator.userAgent.indexOf('MSIE') !== -1 || !!document.documentMode\n  },\n  // Edge 20+\n  isEdge: () => {\n    return !Browser.isIE() && !!window.StyleMedia\n  },\n  // Chrome 1+\n  isChrome: (context = window) => {\n    return !!context.chrome\n  },\n  // At least Safari 3+: \"[object HTMLElementConstructor]\"\n  isSafari: () => {\n    return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 ||\n        navigator.userAgent.toLowerCase().indexOf('safari') !== -1\n  },\n  // IOS Chrome\n  isIOSChrome: () => {\n    return navigator.userAgent.toLowerCase().indexOf('crios') !== -1\n  }\n}\n\nexport default Browser\n","const Modal = {\n  show (params) {\n    // Build modal\n    let modalStyle = 'font-family:sans-serif; ' +\n        'display:table; ' +\n        'text-align:center; ' +\n        'font-weight:300; ' +\n        'font-size:30px; ' +\n        'left:0; top:0;' +\n        'position:fixed; ' +\n        'z-index: 9990;' +\n        'color: #0460B5; ' +\n        'width: 100%; ' +\n        'height: 100%; ' +\n        'background-color:rgba(255,255,255,.9);' +\n        'transition: opacity .3s ease;'\n\n    // Create wrapper\n    let printModal = document.createElement('div')\n    printModal.setAttribute('style', modalStyle)\n    printModal.setAttribute('id', 'printJS-Modal')\n\n    // Create content div\n    let contentDiv = document.createElement('div')\n    contentDiv.setAttribute('style', 'display:table-cell; vertical-align:middle; padding-bottom:100px;')\n\n    // Add close button (requires print.css)\n    let closeButton = document.createElement('div')\n    closeButton.setAttribute('class', 'printClose')\n    closeButton.setAttribute('id', 'printClose')\n    contentDiv.appendChild(closeButton)\n\n    // Add spinner (requires print.css)\n    let spinner = document.createElement('span')\n    spinner.setAttribute('class', 'printSpinner')\n    contentDiv.appendChild(spinner)\n\n    // Add message\n    let messageNode = document.createTextNode(params.modalMessage)\n    contentDiv.appendChild(messageNode)\n\n    // Add contentDiv to printModal\n    printModal.appendChild(contentDiv)\n\n    // Append print modal element to document body\n    document.getElementsByTagName('body')[0].appendChild(printModal)\n\n    // Add event listener to close button\n    document.getElementById('printClose').addEventListener('click', function () {\n      Modal.close()\n    })\n  },\n  close () {\n    let printFrame = document.getElementById('printJS-Modal')\n\n    printFrame.parentNode.removeChild(printFrame)\n  }\n}\n\nexport default Modal\n","import Browser from './browser'\nimport { cleanUp } from './functions'\n\nconst Print = {\n  send: (params, printFrame) => {\n    // Append iframe element to document body\n    document.getElementsByTagName('body')[0].appendChild(printFrame)\n\n    // Get iframe element\n    const iframeElement = document.getElementById(params.frameId)\n\n    // Wait for iframe to load all content\n    iframeElement.onload = () => {\n      // Get iframe element document\n      let printDocument = (iframeElement.contentWindow || iframeElement.contentDocument)\n      if (printDocument.document) printDocument = printDocument.document\n\n      if (params.type === 'pdf' || params.type === 'file') {\n        printDocument.title = params.documentTitle;\n        performPrint(iframeElement, params)\n        return\n      }\n\n      // Append printable element to the iframe body\n      printDocument.body.appendChild(params.printableElement)\n\n      // Add custom style\n      if (params.type !== 'pdf' && params.style) {\n        // Create style element\n        const style = document.createElement('style')\n        style.innerHTML = params.style\n\n        // Append style element to iframe's head\n        printDocument.head.appendChild(style)\n      }\n\n      // If printing images, wait for them to load inside the iframe\n      const images = Array.prototype.slice.call(printDocument.getElementsByTagName('img'))\n\n      if (images.length > 0) {\n        loadIframeImages(images).then(() => performPrint(iframeElement, params))\n      } else {\n        performPrint(iframeElement, params)\n      }\n    }\n  }\n}\n\nfunction performPrint (iframeElement, params) {\n  try {\n    iframeElement.focus()\n\n    // If Edge or IE, try catch with execCommand\n    if (Browser.isEdge() || Browser.isIE()) {\n      try {\n        iframeElement.contentWindow.document.execCommand('print', false, null)\n      } catch (e) {\n        iframeElement.contentWindow.print()\n      }\n    } else {\n      // Other browsers\n      iframeElement.contentWindow.print()\n    }\n  } catch (error) {\n    params.onError(error)\n  } finally {\n    cleanUp(params)\n  }\n}\n\nfunction loadIframeImages (images) {\n  const promises = images.map(image => {\n    if (image.src && image.src !== window.location.href) {\n      return loadIframeImage(image)\n    }\n  })\n\n  return Promise.all(promises)\n}\n\nfunction loadIframeImage (image) {\n  return new Promise(resolve => {\n    const pollImage = () => {\n      !image || typeof image.naturalWidth === 'undefined' || image.naturalWidth === 0 || !image.complete\n        ? setTimeout(pollImage, 500)\n        : resolve()\n    }\n    pollImage()\n  })\n}\n\nexport default Print\n","import Print from './print'\nimport Modal from './modal'\nimport Browser from './browser'\n\nexport function addWrapper (htmlData, params) {\n  let bodyStyle = 'font-family:' + params.font + ' !important; font-size: ' + params.font_size + ' !important; width:100%;'\n  return '<div style=\"' + bodyStyle + '\">' + htmlData + '</div>'\n}\n\nexport function capitalizePrint (obj) {\n  return obj.charAt(0).toUpperCase() + obj.slice(1)\n}\n\nexport function collectStyles (element, params) {\n  let win = document.defaultView || window\n\n  // String variable to hold styling for each element\n  let elementStyle = ''\n\n  // Loop over computed styles\n  let styles = win.getComputedStyle(element, '')\n\n  Object.keys(styles).map(key => {\n    // Check if style should be processed\n    if (params.targetStyles.indexOf('*') !== -1 || params.targetStyle.indexOf(styles[key]) !== -1 || targetStylesMatch(params.targetStyles, styles[key])) {\n      if (styles.getPropertyValue(styles[key])) elementStyle += styles[key] + ':' + styles.getPropertyValue(styles[key]) + ';'\n    }\n  })\n\n  // Print friendly defaults (deprecated)\n  elementStyle += 'max-width: ' + params.maxWidth + 'px !important;' + params.font_size + ' !important;'\n\n  return elementStyle\n}\n\nfunction targetStylesMatch (styles, value) {\n  for (let i = 0; i < styles.length; i++) {\n    if (typeof value === 'object' && value.indexOf(styles[i]) !== -1) return true\n  }\n  return false\n}\n\nexport function addHeader (printElement, params) {\n  // Create the header container div\n  let headerContainer = document.createElement('div')\n\n  // Check if the header is text or raw html\n  if (isRawHTML(params.header)) {\n    headerContainer.innerHTML = params.header\n  } else {\n    // Create header element\n    let headerElement = document.createElement('h1')\n\n    // Create header text node\n    let headerNode = document.createTextNode(params.header)\n\n    // Build and style\n    headerElement.appendChild(headerNode)\n    headerElement.setAttribute('style', params.headerStyle)\n    headerContainer.appendChild(headerElement)\n  }\n\n  printElement.insertBefore(headerContainer, printElement.childNodes[0])\n}\n\nexport function cleanUp (params) {\n  // If we are showing a feedback message to user, remove it\n  if (params.showModal) Modal.close()\n\n  // Check for a finished loading hook function\n  if (params.onLoadingEnd) params.onLoadingEnd()\n\n  // If preloading pdf files, clean blob url\n  if (params.showModal || params.onLoadingStart) window.URL.revokeObjectURL(params.printable)\n\n  // If a onPrintDialogClose callback is given, execute it\n  if (params.onPrintDialogClose) {\n    let event = 'mouseover'\n\n    if (Browser.isChrome() || Browser.isFirefox()) {\n      // Ps.: Firefox will require an extra click in the document to fire the focus event.\n      event = 'focus'\n    }\n    const handler = () => {\n      // Make sure the event only happens once.\n      window.removeEventListener(event, handler)\n\n      params.onPrintDialogClose()\n    }\n\n    window.addEventListener(event, handler)\n  }\n}\n\nexport function isRawHTML (raw) {\n  let regexHtml = new RegExp('<([A-Za-z][A-Za-z0-9]*)\\\\b[^>]*>(.*?)</\\\\1>')\n  return regexHtml.test(raw)\n}\n\nexport function getAbsoluteUrl (printable) {\n  return /^(blob|http)/i.test(printable)\n    ? printable\n    : window.location.origin + (printable.charAt(0) !== '/' ? '/' + printable : printable)\n}\n\nexport function createBlobAndPrint (params, printFrame, data, mimeType) {\n  // Pass response or base64 data to a blob and create a local object url\n  let localFile = new window.Blob([data], { type: mimeType })\n  localFile = window.URL.createObjectURL(localFile)\n\n  // Set iframe src with file document url\n  printFrame.setAttribute('src', localFile)\n\n  Print.send(params, printFrame)\n}\n\nexport function printFile (url, mimeType, params, printFrame) {\n  loadFile(params.printable)\n    .then((req) => {\n      createBlobAndPrint(params, printFrame, req.response, mimeType)\n    })\n    .catch((err) => {\n      cleanUp(params)\n      params.onError(err)\n    })\n}\n\nexport function loadFile (url) {\n  return new Promise(function (resolve, reject) {\n    let req = new window.XMLHttpRequest()\n    req.responseType = 'arraybuffer'\n\n    req.addEventListener('load', () => {\n      // Check for errors\n      if ([200, 201].indexOf(req.status) === -1) {\n        const err = new Error('Unable to load file for printing')\n        err.req = req\n        reject(err)\n        return\n      }\n\n      resolve(req)\n    })\n\n    req.open('GET', url, true)\n    req.send()\n  })\n}\n","import { collectStyles, addHeader } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Get the DOM printable element\n    let printElement = document.getElementById(params.printable)\n\n    // Check if the element exists\n    if (!printElement) {\n      window.console.error('Invalid HTML element id: ' + params.printable)\n      return\n    }\n\n    // Clone the target element including its children (if available)\n    params.printableElement = cloneElement(printElement, params)\n\n    // Add header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Print html element contents\n    Print.send(params, printFrame)\n  }\n}\n\nfunction cloneElement (element, params) {\n  // Clone the main node (if not already inside the recursion process)\n  const clone = element.cloneNode()\n\n  // Loop over and process the children elements / nodes (including text nodes)\n  const childNodesArray = Array.prototype.slice.call(element.childNodes)\n  for (let i = 0; i < childNodesArray.length; i++) {\n    // Check if we are skiping the current element\n    if (params.ignoreElements.indexOf(childNodesArray[i].id) !== -1) {\n      continue\n    }\n\n    // Clone the child element\n    const clonedChild = cloneElement(childNodesArray[i], params)\n\n    // Attach the cloned child to the cloned parent node\n    clone.appendChild(clonedChild)\n  }\n\n  // Get all styling for print element (for nodes of type element only)\n  if (params.scanStyles && element.nodeType === 1) {\n    clone.setAttribute('style', collectStyles(element, params))\n  }\n\n  // Check if the element needs any state processing (copy user input data)\n  switch (element.tagName) {\n    case 'SELECT':\n      // Copy the current selection value to its clone\n      clone.value = element.value\n      break\n    case 'CANVAS':\n      // Copy the canvas content to its clone\n      clone.getContext('2d').drawImage(element, 0, 0)\n      break\n  }\n\n  return clone\n}\n","import { createBlobAndPrint, getAbsoluteUrl, printFile } from './functions'\n\nexport default {\n  print: (params, printFrame, defaultMime) => {\n    const mime = params.mime || defaultMime\n\n    // Check if we have base64 data\n    if (params.base64) {\n      const bytesArray = Uint8Array.from(atob(params.printable), c => c.charCodeAt(0))\n      createBlobAndPrint(params, printFrame, bytesArray, mime)\n      return\n    }\n\n    // Format pdf url\n    printFile(getAbsoluteUrl(params.printable), mime, params, printFrame)\n  }\n}\n","import Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n    params.printableElement.setAttribute('style', 'width:100%')\n\n    // Set our raw html as the printable element inner html content\n    params.printableElement.innerHTML = params.printable\n\n    // Print html contents\n    Print.send(params, printFrame)\n  }\n}\n","import { addHeader } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we are printing one image or multiple images\n    if (params.printable.constructor !== Array) {\n      // Create array with one image\n      params.printable = [params.printable]\n    }\n\n    // Create printable element (container)\n    params.printableElement = document.createElement('div')\n\n    // Create all image elements and append them to the printable container\n    params.printable.forEach(src => {\n      // Create the image element\n      let img = document.createElement('img')\n      img.setAttribute('style', params.imageStyle)\n\n      // Set image src with the file url\n      img.src = src\n\n      // Create the image wrapper\n      let imageWrapper = document.createElement('div')\n\n      // Append image to the wrapper element\n      imageWrapper.appendChild(img)\n\n      // Append wrapper to the printable element\n      params.printableElement.appendChild(imageWrapper)\n    })\n\n    // Check if we are adding a print header\n    if (params.header) addHeader(params.printableElement, params)\n\n    // Print image\n    Print.send(params, printFrame)\n  }\n}\n","import { capitalizePrint, addHeader } from './functions'\nimport Print from './print'\n\nexport default {\n  print: (params, printFrame) => {\n    // Check if we received proper data\n    if (typeof params.printable !== 'object') {\n      throw new Error('Invalid javascript data object (JSON).')\n    }\n\n    // Validate repeatTableHeader\n    if (typeof params.repeatTableHeader !== 'boolean') {\n      throw new Error('Invalid value for repeatTableHeader attribute (JSON).')\n    }\n\n    // Validate properties\n    if (!params.properties || !Array.isArray(params.properties)) {\n      throw new Error('Invalid properties array for your JSON data.')\n    }\n\n    // We will format the property objects to keep the JSON api compatible with older releases\n    params.properties = params.properties.map(property => {\n      return {\n        field: typeof property === 'object' ? property.field : property,\n        displayName: typeof property === 'object' ? property.displayName : property,\n        columnSize: typeof property === 'object' && property.columnSize ? property.columnSize + ';' : 100 / params.properties.length + '%;'\n      }\n    })\n\n    // Create a print container element\n    params.printableElement = document.createElement('div')\n\n    // Check if we are adding a print header\n    if (params.header) {\n      addHeader(params.printableElement, params)\n    }\n\n    // Build the printable html data\n    params.printableElement.innerHTML += jsonToHTML(params)\n\n    // Print the json data\n    Print.send(params, printFrame)\n  }\n}\n\nfunction jsonToHTML (params) {\n  // Get the row and column data\n  let data = params.printable\n  let properties = params.properties\n\n  // Create a html table\n  let htmlData = '<table style=\"border-collapse: collapse; width: 100%;\">'\n\n  // Check if the header should be repeated\n  if (params.repeatTableHeader) {\n    htmlData += '<thead>'\n  }\n\n  // Add the table header row\n  htmlData += '<tr>'\n\n  // Add the table header columns\n  for (let a = 0; a < properties.length; a++) {\n    htmlData += '<th style=\"width:' + properties[a].columnSize + ';' + params.gridHeaderStyle + '\">' + capitalizePrint(properties[a].displayName) + '</th>'\n  }\n\n  // Add the closing tag for the table header row\n  htmlData += '</tr>'\n\n  // If the table header is marked as repeated, add the closing tag\n  if (params.repeatTableHeader) {\n    htmlData += '</thead>'\n  }\n\n  // Create the table body\n  htmlData += '<tbody>'\n\n  // Add the table data rows\n  for (let i = 0; i < data.length; i++) {\n    // Add the row starting tag\n    htmlData += '<tr>'\n\n    // Print selected properties only\n    for (let n = 0; n < properties.length; n++) {\n      let stringData = data[i]\n\n      // Support nested objects\n      let property = properties[n].field.split('.')\n      if (property.length > 1) {\n        for (let p = 0; p < property.length; p++) {\n          stringData = stringData[property[p]]\n        }\n      } else {\n        stringData = stringData[properties[n].field]\n      }\n\n      // Add the row contents and styles\n      htmlData += '<td style=\"width:' + properties[n].columnSize + params.gridStyle + '\">' + stringData + '</td>'\n    }\n\n    // Add the row closing tag\n    htmlData += '</tr>'\n  }\n\n  // Add the table and body closing tags\n  htmlData += '</tbody></table>'\n\n  return htmlData\n}\n","'use strict'\n\nimport Browser from './browser'\nimport Modal from './modal'\nimport Html from './html'\nimport File from './file'\nimport RawHtml from './raw-html'\nimport Image from './image'\nimport Json from './json'\n\nconst printTypes = ['pdf', 'html', 'image', 'json', 'raw-html', 'file']\n\nexport default {\n  init () {\n    let params = {\n      printable: null,\n      fallbackPrintable: null,\n      type: 'pdf',\n      header: null,\n      headerStyle: 'font-weight: 300;',\n      maxWidth: 800,\n      font: 'TimesNewRoman',\n      font_size: '12pt',\n      honorMarginPadding: true,\n      honorColor: false,\n      properties: null,\n      gridHeaderStyle: 'font-weight: bold; padding: 5px; border: 1px solid #dddddd;',\n      gridStyle: 'border: 1px solid lightgray; margin-bottom: -1px;',\n      showModal: false,\n      onError: (error) => { throw error },\n      onLoadingStart: null,\n      onLoadingEnd: null,\n      onPrintDialogClose: null,\n      onPdfOpen: null,\n      onBrowserIncompatible: () => true,\n      modalMessage: 'Retrieving Document...',\n      frameId: 'printJS',\n      printableElement: null,\n      documentTitle: 'Document',\n      targetStyle: ['clear', 'display', 'width', 'min-width', 'height', 'min-height', 'max-height'],\n      targetStyles: ['border', 'box', 'break', 'text-decoration'],\n      ignoreElements: [],\n      imageStyle: 'max-width: 100%;',\n      repeatTableHeader: true,\n      css: null,\n      style: null,\n      scanStyles: true,\n      base64: false,\n      mime: null\n    }\n\n    // Check if a printable document or object was supplied\n    let args = arguments[0]\n    if (args === undefined) throw new Error('printJS expects at least 1 attribute.')\n\n    // Process parameters\n    switch (typeof args) {\n      case 'string':\n        params.printable = encodeURI(args)\n        params.fallbackPrintable = params.printable\n        params.type = arguments[1] || params.type\n        break\n      case 'object': {\n        const mimeType = params.mime || 'application/pdf'\n        params.printable = args.printable\n        params.base64 = typeof args.base64 !== 'undefined'\n        params.fallbackPrintable = typeof args.fallbackPrintable !== 'undefined' ? args.fallbackPrintable : params.printable\n        params.fallbackPrintable = params.base64 ? `data:${mimeType};base64,${params.fallbackPrintable}` : params.fallbackPrintable\n        for (let k in params) {\n          if (k === 'printable' || k === 'fallbackPrintable' || k === 'base64') continue\n\n          params[k] = typeof args[k] !== 'undefined' ? args[k] : params[k]\n        }\n        break\n      }\n      default:\n        throw new Error('Unexpected argument type! Expected \"string\" or \"object\", got ' + typeof args)\n    }\n\n    // Validate printable\n    if (!params.printable) throw new Error('Missing printable information.')\n\n    // Validate type\n    if (!params.type || typeof params.type !== 'string' || printTypes.indexOf(params.type.toLowerCase()) === -1) {\n      throw new Error('Invalid print type. Available types are: pdf, html, image and json.')\n    }\n\n    // Check if we are showing a feedback message to the user (useful for large files)\n    if (params.showModal) Modal.show(params)\n\n    // Check for a print start hook function\n    if (params.onLoadingStart) params.onLoadingStart()\n\n    // To prevent duplication and issues, remove any used printFrame from the DOM\n    let usedFrame = document.getElementById(params.frameId)\n\n    if (usedFrame) usedFrame.parentNode.removeChild(usedFrame)\n\n    // Create a new iframe or embed element (IE prints blank pdf's if we use iframe)\n    let printFrame\n\n    // Create iframe element\n    printFrame = document.createElement('iframe')\n\n    // Hide iframe\n    printFrame.setAttribute('style', 'visibility: hidden; height: 0; width: 0; position: absolute;')\n\n    // Set iframe element id\n    printFrame.setAttribute('id', params.frameId)\n\n    // For non pdf printing, pass an html document string to srcdoc (force onload callback)\n    if (params.type !== 'pdf' && params.type !== 'file') {\n      printFrame.srcdoc = '<html><head><title>' + params.documentTitle + '</title>'\n\n      // Attach css files\n      if (params.css) {\n        // Add support for single file\n        if (!Array.isArray(params.css)) params.css = [params.css]\n\n        // Create link tags for each css file\n        params.css.forEach(file => {\n          printFrame.srcdoc += '<link rel=\"stylesheet\" href=\"' + file + '\">'\n        })\n      }\n\n      printFrame.srcdoc += '</head><body></body></html>'\n    }\n\n    // Check printable type\n    switch (params.type) {\n      case 'file':\n        File.print(params, printFrame, 'text/plain')\n        break\n      case 'pdf':\n        // Check browser support for pdf and if not supported we will just open the pdf file instead\n        if (Browser.isFirefox() || Browser.isEdge() || Browser.isIE()) {\n          try {\n            console.info('PrintJS currently doesn\\'t support PDF printing in Firefox, Internet Explorer and Edge.')\n            if (params.onBrowserIncompatible() === true) {\n              let win = window.open(params.fallbackPrintable, '_blank')\n              win.focus()\n              if (params.onPdfOpen) params.onPdfOpen()\n            }\n          } catch (e) {\n            params.onError(e)\n          } finally {\n            // Make sure there is no loading modal opened\n            if (params.showModal) Modal.close()\n            if (params.onLoadingEnd) params.onLoadingEnd()\n          }\n        } else {\n          File.print(params, printFrame, 'application/pdf')\n        }\n        break\n      case 'image':\n        Image.print(params, printFrame)\n        break\n      case 'html':\n        Html.print(params, printFrame)\n        break\n      case 'raw-html':\n        RawHtml.print(params, printFrame)\n        break\n      case 'json':\n        Json.print(params, printFrame)\n        break\n    }\n  }\n}\n","import './sass/index.scss'\nimport print from './js/init'\n\nconst printJS = print.init\n\nif (typeof window !== 'undefined') {\n  window.printJS = printJS\n}\n\nexport default printJS\n"],"sourceRoot":""}